{"version":3,"sources":["components/Navbar.js","Lottie.js","components/Loading.js","components/Idea.js","components/Instruction.js","actions/ideas.js","containers/Generator.js","containers/IdeasIndex.js","components/Description.js","containers/About.js","components/Form.js","App.js","index.js","reducers/ideasReducer.js"],"names":["Navbar","className","to","type","color","iterations","strokeWidth","animationDelay","show","exact","activeClassName","LottieAnimation","lotti","width","height","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","Loading","home","Idea","props","sourceBtnClass","idea","source","includes","title","content","href","link","target","rel","role","Instruction","style","active","border","URL","resetIdeas","dispatch","Generator","state","handleKeyUp","bind","this","clearIdeas","getIdea","window","addEventListener","removeEventListener","event","key","location","split","slice","setState","fetchIdea","loading","renderContentLoading","renderContent","ideas","map","id","renderContentConditional","Component","connect","fetch","then","response","json","payload","catch","err","alert","IdeasIndex","handleChange","filter","value","fetchFilteredIdeas","getIdeas","fetchIdeas","onChange","Description","About","Form","name","handleSubmit","preventDefault","addIdea","person","handleAlertMessage","message","onSubmit","placeholder","autoComplete","required","resize","method","headers","body","JSON","stringify","App","component","Fader","path","store","createStore","action","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.71aa9257.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { RoughNotation } from \"react-rough-notation\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-white border-bottom\">\r\n      <NavLink to=\"/\" className=\"navbar-brand pl-xl-5 pl-lg-5 pl-md-5 pl-sm-1 pl-xs-1  ml-xl-3 ml-lg-3 ml-md-3\">\r\n         <RoughNotation type=\"highlight\" color=\"#da552f\" iterations=\"4\" strokeWidth=\"3\" animationDelay=\"1400\" show=\"true\">\r\n           <strong>Request For Yes</strong>\r\n         </RoughNotation>\r\n      </NavLink>\r\n\r\n      <div className=\"navbar-nav ml-auto flex-row\">\r\n        <NavLink exact to=\"/\" className=\"nav-link pr-3\" activeClassName=\"nav-item active\">Generator</NavLink>\r\n        <NavLink exact to=\"/all\" className=\"nav-link px-3\" activeClassName=\"nav-item active\">Index</NavLink>\r\n        <NavLink exact to=\"/about\" className=\"nav-link pr-xl-5 pr-lg-5 pr-md-5 pr-sm-1 pr-xs-1  mr-xl-5 mr-lg-5 mr-md-5  pl-xl-3 pl-lg-3 pl-md-3\" activeClassName=\"nav-item active\">About</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\r\nimport Lottie from \"react-lottie\"\r\n\r\nexport default function LottieAnimation({ lotti, width, height }) {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: lotti,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={height} width={width} />\r\n    </div>\r\n  )\r\n}\r\n","// rendering the three dots animation to indicate loading state\r\nimport React from 'react'\r\nimport LottieAnimation from '../Lottie'\r\nimport home from '../animations/loading.json'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"card w-75 box-shadow mb-5\">\r\n      <LottieAnimation lotti={home} height={300} width={300} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n\r\nconst Idea = props => {\r\n\r\n// style the source link button dynamically\r\n  let sourceBtnClass\r\n  if (props.idea.source.includes('Twitter thread')) {\r\n    sourceBtnClass = 'btn-info'\r\n  } else if (props.idea.source.includes('My First Million podcast')) {\r\n    sourceBtnClass = 'btn-warning'\r\n  } else if (props.idea.source.includes('RFS 100 newsletter')) {\r\n    sourceBtnClass = 'btn-primary'\r\n  } else if (props.idea.source.includes('User submission')) {\r\n    sourceBtnClass = 'btn-dark'\r\n  }\r\n\r\n  return (\r\n    <div className=\"card w-75 box-shadow mb-4\">\r\n      <div className=\"card-body mx-xl-5 mx-lg-5 mx-md-2 mx-sm-1 mx-xs-1 py-xl-3 py-lg-3 my-xl-3 my-lg-3\">\r\n        <h2 className=\"card-title py-2\">{props.idea.title}</h2>\r\n        <p className=\"card-text lead pt-2 pb-3\">{props.idea.content}</p>\r\n        <a href={props.idea.link} target=\"_blank\" rel=\"noopener noreferrer\" className={`btn ${sourceBtnClass} border-0 py-2 px-2`} role=\"button\">{props.idea.source}</a>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Idea\r\n","import React from 'react'\r\n\r\nconst Instruction = props => {\r\n  return (\r\n    <div className=\"card w-75 bg-transparent border-0\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"text-right\" style={{color: props.active ? 'rgba(0, 0, 0, 1)' : '' }} >press <kbd style={{ border: props.active ? '1px solid black' : '' }} >n</kbd> for new idea</h5>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Instruction\r\n","const URL = 'https://rfyes.herokuapp.com'\r\n\r\n// fetching all ideas to render on index page\r\n// display loading state until fetch successful\r\nexport function fetchIdeas() {\r\n\r\n  return (dispatch) => {\r\n  dispatch({ type: 'LOADING' })\r\n  fetch(`${URL}/ideas`)\r\n    .then(response => response.json())\r\n    .then(ideas => dispatch({ type: 'SHOW_IDEAS', payload: ideas }) )\r\n    .catch(err => alert(\"An unexpected error occurred.\"))\r\n  }\r\n\r\n}\r\n\r\n// fetching only ideas matching matching source\r\nexport function fetchFilteredIdeas(type = 'all') {\r\n\r\n  return (dispatch) => {\r\n  dispatch({ type: 'LOADING' })\r\n  fetch(`${URL}/${type}`)\r\n    .then(response => response.json())\r\n    .then(ideas => dispatch({ type: 'SHOW_IDEAS', payload: ideas }) )\r\n    .catch(err => alert(\"An unexpected error occurred.\"))\r\n  }\r\n\r\n}\r\n\r\n// fetching a single random idea\r\n// display loading state until fetch successful\r\nexport function fetchIdea() {\r\n\r\n  return (dispatch) => {\r\n  dispatch({ type: 'LOADING' })\r\n  fetch(`${URL}/`)\r\n    .then(response => response.json())\r\n    .then(idea => dispatch({ type: 'SHOW_IDEA', payload: idea }) )\r\n    .catch(err => alert(\"An unexpected error occurred.\"))\r\n  }\r\n\r\n}\r\n\r\n// creating an idea with user form submission\r\nexport function addIdea(idea) {\r\n\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: {\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"},\r\n    body: JSON.stringify({idea})\r\n  }\r\n\r\n  return (dispatch) => {\r\n  fetch(`${URL}/ideas`, options)\r\n    .then(response => response.json())\r\n    .then(message => dispatch({ type: 'ADD_IDEA', payload: message }) )\r\n    .catch(err => alert(\"An unexpected error occurred.\"))\r\n  }\r\n\r\n}\r\n\r\n// clearing out state\r\nexport function resetIdeas() {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'LOADING' })\r\n  }\r\n}\r\n","// renders a loading animation until a random idea is fetched and displayed on a card\r\nimport React, { Component } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport Idea from '../components/Idea'\r\nimport Instruction from '../components/Instruction'\r\nimport { connect } from 'react-redux'\r\nimport { fetchIdea, resetIdeas } from '../actions/ideas'\r\n\r\nclass Generator extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { active: false }\r\n    this.handleKeyUp = this.handleKeyUp.bind(this)\r\n  }\r\n\r\n// invoked immediately after component mounts\r\n  componentDidMount() {\r\n    this.clearIdeas()\r\n    this.getIdea()\r\n    window.addEventListener(\"keyup\", this.handleKeyUp)\r\n  }\r\n\r\n// invoked just before component is unmounted\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keyup', this.handleKeyUp)\r\n  }\r\n\r\n// when user hits 'Enter',\r\n// change state to indicate keyboard shortcut activated\r\n// and invoke functions to clear redux store and fetch new idea\r\n  handleKeyUp(event) {\r\n    if (event.key === 'n' && window.location.href.split('/').slice(-1)[0] === '') {\r\n      this.setState({ active: true })\r\n      this.clearIdeas()\r\n      this.getIdea()\r\n      this.setState({ active: false })\r\n    }\r\n  }\r\n\r\n// clearing out any existing ideas from redux store\r\n  clearIdeas() { this.props.resetIdeas() }\r\n\r\n// using the fetchIdea action creator to get an idea from the API\r\n  getIdea() { this.props.fetchIdea() }\r\n\r\n// display loading message until fetch is completed\r\n  renderContentConditional() {\r\n    if (this.props.loading) {\r\n      return this.renderContentLoading()\r\n    } else {\r\n      return this.renderContent()\r\n    }\r\n  }\r\n\r\n// returns the component for the loading animation\r\n  renderContentLoading() { return <Loading /> }\r\n\r\n// returns a card component once fetch is completed successfully\r\n  renderContent() {\r\n    return (\r\n      this.props.ideas.map(idea => <Idea idea={idea} key={idea.id} id={idea.id} />)\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container col-xl-8 col-lg-10 col-md-10 col-sm-10 col-xs-10  offset-2  py-5 my-4\">\r\n        {this.renderContentConditional()}\r\n        <Instruction active={this.state.active} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n// enabling Generator component to access ideas and loading from state in redux store\r\nconst mapStateToProps = ({ ideas, loading, active }) => {\r\n  return { ideas, loading, active }\r\n}\r\n\r\n// connecting component to redux store\r\n// redux state and fetchIdea() action creator will be available through props\r\nexport default connect(mapStateToProps, {fetchIdea, resetIdeas})(Generator)\r\n","// rendering a filterable list of all ideas\r\nimport React, { Component } from 'react'\r\nimport Loading from '../components/Loading'\r\nimport Idea from '../components/Idea'\r\nimport { connect } from 'react-redux'\r\nimport { fetchIdeas, fetchFilteredIdeas, resetIdeas } from '../actions/ideas'\r\n\r\nclass IdeasIndex extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { filter: 'all' }\r\n  }\r\n\r\n// invoked immediately after component mounts\r\n  componentDidMount() {\r\n    this.clearIdeas()\r\n    this.getIdeas()\r\n  }\r\n\r\n// clearing out any existing ideas from redux store\r\n  clearIdeas() { this.props.resetIdeas() }\r\n\r\n// using the fetchIdeas action creator to get an idea from the API\r\n  getIdeas() { this.props.fetchIdeas() }\r\n\r\n// display loading message until fetch is completed\r\n  renderContentConditional() {\r\n    if (this.props.loading) {\r\n      return this.renderContentLoading()\r\n    } else {\r\n      return this.renderContent()\r\n    }\r\n  }\r\n\r\n// returns the component for the loading animation\r\n  renderContentLoading() { return <Loading /> }\r\n\r\n// returns card components for all ideas upon completion of fetch\r\n  renderContent() {\r\n    return (\r\n      this.props.ideas.map(idea => <Idea idea={idea} key={idea.id} id={idea.id} />)\r\n    )\r\n  }\r\n\r\n// callback function updates local state and fetches ideas based on user selection\r\n  handleChange = event => {\r\n    this.setState({ filter: event.target.value })\r\n    this.props.fetchFilteredIdeas(event.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container col-xl-8 col-lg-10 col-md-10 col-sm-10 col-xs-10  offset-2  py-4 my-xl-4 my-lg-4 my-md-4 my-sm-3 my-xs-3\">\r\n\r\n        <form className=\"form-inline justify-content-end w-75 mb-5\">\r\n          <label className=\"pr-2\">Filter: </label>\r\n          <select className=\"form-control\" value={this.state.filter} onChange={this.handleChange}>\r\n            <option value='all'>All</option>\r\n            <option value=\"twitter\">Twitter threads</option>\r\n            <option value=\"rfs\">RFS 100 newsletter</option>\r\n            <option value=\"mfm\">My First Million podcast</option>\r\n            <option value=\"user\">User submission</option>\r\n          </select>\r\n        </form>\r\n\r\n        {this.renderContentConditional()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n// enabling Index component to access ideas and loading from state in redux store\r\nconst mapStateToProps = ({ ideas, loading }) => {\r\n  return { ideas, loading }\r\n}\r\n\r\n// connecting component to redux store\r\n// redux state and these 3 action creators will be available through props\r\nexport default connect(mapStateToProps, {fetchIdeas, fetchFilteredIdeas, resetIdeas})(IdeasIndex)\r\n","// brief description of the app\r\nimport React from 'react'\r\n\r\nconst Description = () => {\r\n  return (\r\n    <div className=\"card w-75 box-shadow-colorful mt-4\">\r\n      <div className=\"card-body mx-xl-5 mx-lg-5 mx-md-2 mx-sm-1 mx-xs-1 py-xl-3 py-lg-3 my-xl-3 my-lg-3\">\r\n        <h2 className=\"py-2\">What is this?</h2>\r\n        <p className=\"lead pb-3\">RF Yes (Request For Yes) is a collection of startup and side project suggestions. Kind of like Product Hunt but for stuff nobody's built yet.</p>\r\n\r\n        <h2 className=\"py-2\">Where are the ideas from?</h2>\r\n        <p className=\"lead pb-3\">These are from the <a href=\"https://rfs100.com/\" target=\"_blank\" rel=\"noopener noreferrer\">RFS 100 newsletter</a>, <a href=\"https://thehustle.co/my-first-million-podcast/\" target=\"_blank\" rel=\"noopener noreferrer\">My First Million podcast</a>, and disparate Twitter threads. None of them are mine!</p>\r\n\r\n        <h2 className=\"py-2\">How can I submit an idea?</h2>\r\n        <p className=\"lead\">Feel free to <a href=\"mailto:eleetyson@gmail.com?subject=👋&body=Hey Ethan - here's my idea...\">email me</a>, especially if you loved or hated this.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Description\r\n","// about page renders a brief app description\r\nimport React from 'react'\r\nimport Description from '../components/Description'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container col-xl-8 col-lg-10 col-md-10 col-sm-10 col-xs-10  offset-2  py-4 my-5\">\r\n      <Description />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default About\r\n","// controlled form component for idea submission\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addIdea, resetIdeas } from '../actions/ideas'\r\n\r\nclass Form extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { title: '', content: '', person: '', link: '' }\r\n  }\r\n\r\n// updating local state with user input\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n// sending an idea to be created on the backend, on form submission\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.addIdea(this.state)\r\n    this.setState({ title: '', content: '', person: '', link: '' })\r\n  }\r\n\r\n// using an alert to provide feedback if user just submitted a form\r\n  handleAlertMessage = () => {\r\n    if (this.props.message) {\r\n      window.alert(`${this.props.message}`)\r\n      this.props.resetIdeas() // reset state after alert\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container col-xl-8 col-lg-10 col-md-10 col-sm-10 col-xs-10  offset-2  py-2 my-2\">\r\n        {this.handleAlertMessage()}\r\n        <div className=\"card w-75 card-special border-0 mt-1\">\r\n          <div className=\"card-body mx-xl-5 mx-lg-5 mx-md-2 mx-sm-1 mx-xs-1 py-xl-1 py-lg-2 my-xl-2 my-lg-2\">\r\n            <form className=\"form-group text-center\" onSubmit={this.handleSubmit}>\r\n              <label className=\"text-left\">Idea Title *\r\n                <input\r\n                  className=\"form-control mt-2 mb-4\"\r\n                  type=\"text\" name=\"title\" value={this.state.title}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Dog bones for babies\" autoComplete=\"off\" required\r\n                />\r\n              </label>\r\n              <br></br>\r\n\r\n              <label className=\"text-left\">Idea Explanation *\r\n                <textarea\r\n                  className=\"form-control mt-2 mb-3\"\r\n                  type=\"text\" name=\"content\" value={this.state.content}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"My toddler keeps gnawing on my arm...\" autoComplete=\"off\" resize=\"none\" required\r\n                />\r\n              </label>\r\n\r\n              <label className=\"text-left\">Your Name *\r\n                <input\r\n                  className=\"form-control mt-2 mb-3\"\r\n                  type=\"text\" name=\"person\" value={this.state.person}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Full Name\" autoComplete=\"off\" required\r\n                />\r\n              </label>\r\n\r\n              <label className=\"text-left\">Link to your Twitter, personal website, etc. *\r\n                <input\r\n                  className=\"form-control mt-2 mb-3\"\r\n                  type=\"url\" name=\"link\" value={this.state.link}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"https://mywebsite.com/home\" autoComplete=\"off\" required\r\n                />\r\n              </label>\r\n              <br></br>\r\n\r\n              <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ message }) => {\r\n  return { message }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addIdea, resetIdeas})(Form)\r\n","// top-level component always renders nav bar and and a component depending on route\nimport './App.css'\nimport Navbar from './components/Navbar'\nimport { Route } from 'react-router-dom'\nimport TransitionSwitch from 'react-router-transition-switch'\nimport Fader from 'react-fader'\nimport Generator from './containers/Generator'\nimport IdeasIndex from './containers/IdeasIndex'\nimport About from './containers/About'\nimport Form from './components/Form'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <TransitionSwitch component={Fader}>\n        <Route exact path=\"/\"> <Generator /> </Route>\n        <Route exact path=\"/all\"> <IdeasIndex /> </Route>\n        <Route exact path=\"/about\"> <About /> </Route>\n        <Route exact path=\"/ideas/new\"> <Form /> </Route>\n      </TransitionSwitch>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport ideasReducer from './reducers/ideasReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// creating redux store using the ideas reducer\n// also connecting to redux dev tools\nconst store = createStore(\n  ideasReducer,\n  compose(applyMiddleware(thunk), composeWithDevTools())\n)\n\n// wrap top-level App component so all child components can access redux store\n// wrap everything with router\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)\n","export default function ideasReducer(state = {ideas: [], loading: false, message: null}, action) {\r\n  switch(action.type) {\r\n    case 'LOADING':\r\n      return { ...state, ideas: [], loading: true }\r\n\r\n    case 'SHOW_IDEAS':\r\n      return {\r\n        ...state,\r\n        ideas: action.payload,\r\n        loading: false,\r\n        message: null\r\n      }\r\n\r\n    case 'SHOW_IDEA':\r\n      return {\r\n        ...state,\r\n        ideas: [...state.ideas, action.payload],\r\n        loading: false,\r\n        message: null\r\n      }\r\n\r\n    case 'ADD_IDEA':\r\n      return { ...state, message: action.payload.message }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"],"sourceRoot":""}